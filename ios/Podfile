# Resolve react_native_pods.rb with node to allow for hoisting
# require Pod::Executable.execute_command('node', ['-p',
#   'require.resolve(
#     "react-native/scripts/react_native_pods.rb",
#     {paths: [process.argv[1]]},
#   )', __dir__]).strip

# platform :ios, min_ios_version_supported
# prepare_react_native_project!

def node_require(script)
  # Resolve script with node to allow for hoisting
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
      '#{script}',
      {paths: [process.argv[1]]},
    )", __dir__]).strip
end

# Use it to require both react-native's and this package's scripts:
node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')

setup_permissions([
  # 'AppTrackingTransparency',
  # 'Bluetooth',
  # 'Calendars',
  # 'CalendarsWriteOnly',
  # 'Camera',
  # 'Contacts',
  # 'FaceID',
  # 'LocationAccuracy',
  # 'LocationAlways',
  # 'LocationWhenInUse',
  # 'MediaLibrary',
  # 'Microphone',
  # 'Motion',
  'Notifications',
  # 'PhotoLibrary',
  # 'PhotoLibraryAddOnly',
  # 'Reminders',
  # 'Siri',
  # 'SpeechRecognition',
  # 'StoreKit',
])

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'awesome' do
  use_frameworks! :linkage => linkage.to_sym if linkage != nil
  config = use_native_modules!

  # Flags change depending on the env values.
  flags = get_default_flags()

  pod 'RNSVG', :path => '../node_modules/react-native-svg'
  pod 'GoogleUtilities', :modular_headers => true;
  pod 'FirebaseCore', :modular_headers => true;
  pod 'FirebaseCoreExtension', :modular_headers => true;
  pod 'FirebaseInstallations', :modular_headers => true;
  pod 'GoogleDataTransport', :modular_headers => true;
  pod 'FirebaseDatabase', :modular_headers => true
  pod 'leveldb-library', :modular_headers => true
  pod 'FirebaseAppCheckInterop', :modular_headers => true
  # for in-app notifications
  pod 'Firebase/InAppMessaging', :modular_headers => true
  pod 'FirebaseABTesting', :modular_headers => true
  # 
  pod 'nanopb', :modular_headers => true;

  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  post_install do |installer|
    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      # :ccache_enabled => true
    )
  end
end
